// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/jdcloud-api/jdcloud-sdk-go/core"
)

type SetStreamNotifyInfoRequest struct {

    core.JDCloudRequest

    /* 用户域名  */
    Domain string `json:"domain"`

    /* 通知的目标URL (Optional) */
    NotifyUrl *string `json:"notifyUrl"`

    /* 通知时需携带的鉴权key (Optional) */
    NotifyAuthKey *string `json:"notifyAuthKey"`
}

/*
 * param domain: 用户域名 (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewSetStreamNotifyInfoRequest(
    domain string,
) *SetStreamNotifyInfoRequest {

	return &SetStreamNotifyInfoRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/liveDomain/{domain}/streamNotifyInfo",
			Method:  "POST",
			Header:  nil,
			Version: "v1",
		},
        Domain: domain,
	}
}

/*
 * param domain: 用户域名 (Required)
 * param notifyUrl: 通知的目标URL (Optional)
 * param notifyAuthKey: 通知时需携带的鉴权key (Optional)
 */
func NewSetStreamNotifyInfoRequestWithAllParams(
    domain string,
    notifyUrl *string,
    notifyAuthKey *string,
) *SetStreamNotifyInfoRequest {

    return &SetStreamNotifyInfoRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/liveDomain/{domain}/streamNotifyInfo",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
        Domain: domain,
        NotifyUrl: notifyUrl,
        NotifyAuthKey: notifyAuthKey,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewSetStreamNotifyInfoRequestWithoutParam() *SetStreamNotifyInfoRequest {

    return &SetStreamNotifyInfoRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/liveDomain/{domain}/streamNotifyInfo",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param domain: 用户域名(Required) */
func (r *SetStreamNotifyInfoRequest) SetDomain(domain string) {
    r.Domain = domain
}

/* param notifyUrl: 通知的目标URL(Optional) */
func (r *SetStreamNotifyInfoRequest) SetNotifyUrl(notifyUrl string) {
    r.NotifyUrl = &notifyUrl
}

/* param notifyAuthKey: 通知时需携带的鉴权key(Optional) */
func (r *SetStreamNotifyInfoRequest) SetNotifyAuthKey(notifyAuthKey string) {
    r.NotifyAuthKey = &notifyAuthKey
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r SetStreamNotifyInfoRequest) GetRegionId() string {
    return ""
}

type SetStreamNotifyInfoResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result SetStreamNotifyInfoResult `json:"result"`
}

type SetStreamNotifyInfoResult struct {
    IgnoreQueryString string `json:"ignoreQueryString"`
    PushIpWhiteList string `json:"pushIpWhiteList"`
    PublishNormalTimeout int `json:"publishNormalTimeout"`
    NotifyCustomUrl string `json:"notifyCustomUrl"`
    NotifyCustomAuthKey string `json:"notifyCustomAuthKey"`
    ForwardAccessKeyType int `json:"forwardAccessKeyType"`
    ForwardPrivateKey string `json:"forwardPrivateKey"`
    OriginAccessKeyType int `json:"originAccessKeyType"`
    OriginPrivateKey string `json:"originPrivateKey"`
}