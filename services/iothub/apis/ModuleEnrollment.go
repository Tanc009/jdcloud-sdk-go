// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/jdcloud-api/jdcloud-sdk-go/core"
)

type ModuleEnrollmentRequest struct {

    core.JDCloudRequest

    /* moduleName 唯一标识  */
    ModuleName string `json:"moduleName"`

    /*  (Optional) */
    InstanceId *string `json:"instanceId"`

    /*  (Optional) */
    ModelName *string `json:"modelName"`

    /*  (Optional) */
    ParentDeviceName *string `json:"parentDeviceName"`

    /*  (Optional) */
    Name *string `json:"name"`
}

/*
 * param moduleName: moduleName 唯一标识 (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewModuleEnrollmentRequest(
    moduleName string,
) *ModuleEnrollmentRequest {

	return &ModuleEnrollmentRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/module/{moduleName}/enroll",
			Method:  "POST",
			Header:  nil,
			Version: "v1",
		},
        ModuleName: moduleName,
	}
}

/*
 * param moduleName: moduleName 唯一标识 (Required)
 * param instanceId:  (Optional)
 * param modelName:  (Optional)
 * param parentDeviceName:  (Optional)
 * param name:  (Optional)
 */
func NewModuleEnrollmentRequestWithAllParams(
    moduleName string,
    instanceId *string,
    modelName *string,
    parentDeviceName *string,
    name *string,
) *ModuleEnrollmentRequest {

    return &ModuleEnrollmentRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/module/{moduleName}/enroll",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
        ModuleName: moduleName,
        InstanceId: instanceId,
        ModelName: modelName,
        ParentDeviceName: parentDeviceName,
        Name: name,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewModuleEnrollmentRequestWithoutParam() *ModuleEnrollmentRequest {

    return &ModuleEnrollmentRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/module/{moduleName}/enroll",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param moduleName: moduleName 唯一标识(Required) */
func (r *ModuleEnrollmentRequest) SetModuleName(moduleName string) {
    r.ModuleName = moduleName
}

/* param instanceId: (Optional) */
func (r *ModuleEnrollmentRequest) SetInstanceId(instanceId string) {
    r.InstanceId = &instanceId
}

/* param modelName: (Optional) */
func (r *ModuleEnrollmentRequest) SetModelName(modelName string) {
    r.ModelName = &modelName
}

/* param parentDeviceName: (Optional) */
func (r *ModuleEnrollmentRequest) SetParentDeviceName(parentDeviceName string) {
    r.ParentDeviceName = &parentDeviceName
}

/* param name: (Optional) */
func (r *ModuleEnrollmentRequest) SetName(name string) {
    r.Name = &name
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r ModuleEnrollmentRequest) GetRegionId() string {
    return ""
}

type ModuleEnrollmentResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result ModuleEnrollmentResult `json:"result"`
}

type ModuleEnrollmentResult struct {
    Data string `json:"data"`
}