// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/jdcloud-api/jdcloud-sdk-go/core"
)

type OmEnrollbyFileRequest struct {

    core.JDCloudRequest

    /* 物模型文件名称  */
    FileName string `json:"fileName"`

    /* 待上传物模型的IoT Hub实例编号  */
    InstanceId string `json:"instanceId"`
}

/*
 * param fileName: 物模型文件名称 (Required)
 * param instanceId: 待上传物模型的IoT Hub实例编号 (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewOmEnrollbyFileRequest(
    fileName string,
    instanceId string,
) *OmEnrollbyFileRequest {

	return &OmEnrollbyFileRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/file/{fileName}/om",
			Method:  "POST",
			Header:  nil,
			Version: "v1",
		},
        FileName: fileName,
        InstanceId: instanceId,
	}
}

/*
 * param fileName: 物模型文件名称 (Required)
 * param instanceId: 待上传物模型的IoT Hub实例编号 (Required)
 */
func NewOmEnrollbyFileRequestWithAllParams(
    fileName string,
    instanceId string,
) *OmEnrollbyFileRequest {

    return &OmEnrollbyFileRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/file/{fileName}/om",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
        FileName: fileName,
        InstanceId: instanceId,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewOmEnrollbyFileRequestWithoutParam() *OmEnrollbyFileRequest {

    return &OmEnrollbyFileRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/file/{fileName}/om",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param fileName: 物模型文件名称(Required) */
func (r *OmEnrollbyFileRequest) SetFileName(fileName string) {
    r.FileName = fileName
}

/* param instanceId: 待上传物模型的IoT Hub实例编号(Required) */
func (r *OmEnrollbyFileRequest) SetInstanceId(instanceId string) {
    r.InstanceId = instanceId
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r OmEnrollbyFileRequest) GetRegionId() string {
    return ""
}

type OmEnrollbyFileResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result OmEnrollbyFileResult `json:"result"`
}

type OmEnrollbyFileResult struct {
    Data string `json:"data"`
}