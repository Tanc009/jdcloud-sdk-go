// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/jdcloud-api/jdcloud-sdk-go/core"
)

type EdgeEnrollRequest struct {

    core.JDCloudRequest

    /* 边缘计算节点编号  */
    EdgeId string `json:"edgeId"`

    /* 边缘计算设备显示名称  */
    EdgeName string `json:"edgeName"`

    /* IoTHubInstance编号  */
    InstanceId string `json:"instanceId"`

    /* 操作系统  */
    Os string `json:"os"`

    /* 硬件平台版本  */
    Hardware string `json:"hardware"`

    /* 边缘说明 (Optional) */
    EdgeDesc *string `json:"edgeDesc"`
}

/*
 * param edgeId: 边缘计算节点编号 (Required)
 * param edgeName: 边缘计算设备显示名称 (Required)
 * param instanceId: IoTHubInstance编号 (Required)
 * param os: 操作系统 (Required)
 * param hardware: 硬件平台版本 (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewEdgeEnrollRequest(
    edgeId string,
    edgeName string,
    instanceId string,
    os string,
    hardware string,
) *EdgeEnrollRequest {

	return &EdgeEnrollRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/edge/{edgeId}",
			Method:  "POST",
			Header:  nil,
			Version: "v1",
		},
        EdgeId: edgeId,
        EdgeName: edgeName,
        InstanceId: instanceId,
        Os: os,
        Hardware: hardware,
	}
}

/*
 * param edgeId: 边缘计算节点编号 (Required)
 * param edgeName: 边缘计算设备显示名称 (Required)
 * param instanceId: IoTHubInstance编号 (Required)
 * param os: 操作系统 (Required)
 * param hardware: 硬件平台版本 (Required)
 * param edgeDesc: 边缘说明 (Optional)
 */
func NewEdgeEnrollRequestWithAllParams(
    edgeId string,
    edgeName string,
    instanceId string,
    os string,
    hardware string,
    edgeDesc *string,
) *EdgeEnrollRequest {

    return &EdgeEnrollRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/edge/{edgeId}",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
        EdgeId: edgeId,
        EdgeName: edgeName,
        InstanceId: instanceId,
        Os: os,
        Hardware: hardware,
        EdgeDesc: edgeDesc,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewEdgeEnrollRequestWithoutParam() *EdgeEnrollRequest {

    return &EdgeEnrollRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/edge/{edgeId}",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param edgeId: 边缘计算节点编号(Required) */
func (r *EdgeEnrollRequest) SetEdgeId(edgeId string) {
    r.EdgeId = edgeId
}

/* param edgeName: 边缘计算设备显示名称(Required) */
func (r *EdgeEnrollRequest) SetEdgeName(edgeName string) {
    r.EdgeName = edgeName
}

/* param instanceId: IoTHubInstance编号(Required) */
func (r *EdgeEnrollRequest) SetInstanceId(instanceId string) {
    r.InstanceId = instanceId
}

/* param os: 操作系统(Required) */
func (r *EdgeEnrollRequest) SetOs(os string) {
    r.Os = os
}

/* param hardware: 硬件平台版本(Required) */
func (r *EdgeEnrollRequest) SetHardware(hardware string) {
    r.Hardware = hardware
}

/* param edgeDesc: 边缘说明(Optional) */
func (r *EdgeEnrollRequest) SetEdgeDesc(edgeDesc string) {
    r.EdgeDesc = &edgeDesc
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r EdgeEnrollRequest) GetRegionId() string {
    return ""
}

type EdgeEnrollResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result EdgeEnrollResult `json:"result"`
}

type EdgeEnrollResult struct {
}