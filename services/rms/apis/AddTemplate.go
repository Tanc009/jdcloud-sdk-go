// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/jdcloud-api/jdcloud-sdk-go/core"
    rms "github.com/jdcloud-api/jdcloud-sdk-go/services/rms/models"
)

type AddTemplateRequest struct {

    core.JDCloudRequest

    /* Region ID  */
    RegionId string `json:"regionId"`

    /* appId参数 (Optional) */
    AppId *string `json:"appId"`

    /* signType参数 (Optional) */
    SignType *string `json:"signType"`

    /* purpose参数 (Optional) */
    Purpose *string `json:"purpose"`

    /* signCardType参数 (Optional) */
    SignCardType *string `json:"signCardType"`

    /* aptitudes参数 (Optional) */
    Aptitudes *string `json:"aptitudes"`

    /* title参数 (Optional) */
    Title *string `json:"title"`

    /* description参数 (Optional) */
    Description *string `json:"description"`

    /* isTuiding参数 (Optional) */
    IsTuiding *string `json:"isTuiding"`

    /* content参数 (Optional) */
    Content []rms.QueryAddTemplateContent `json:"content"`
}

/*
 * param regionId: Region ID (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewAddTemplateRequest(
    regionId string,
) *AddTemplateRequest {

	return &AddTemplateRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/addTemplate",
			Method:  "POST",
			Header:  nil,
			Version: "v1",
		},
        RegionId: regionId,
	}
}

/*
 * param regionId: Region ID (Required)
 * param appId: appId参数 (Optional)
 * param signType: signType参数 (Optional)
 * param purpose: purpose参数 (Optional)
 * param signCardType: signCardType参数 (Optional)
 * param aptitudes: aptitudes参数 (Optional)
 * param title: title参数 (Optional)
 * param description: description参数 (Optional)
 * param isTuiding: isTuiding参数 (Optional)
 * param content: content参数 (Optional)
 */
func NewAddTemplateRequestWithAllParams(
    regionId string,
    appId *string,
    signType *string,
    purpose *string,
    signCardType *string,
    aptitudes *string,
    title *string,
    description *string,
    isTuiding *string,
    content []rms.QueryAddTemplateContent,
) *AddTemplateRequest {

    return &AddTemplateRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/addTemplate",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
        RegionId: regionId,
        AppId: appId,
        SignType: signType,
        Purpose: purpose,
        SignCardType: signCardType,
        Aptitudes: aptitudes,
        Title: title,
        Description: description,
        IsTuiding: isTuiding,
        Content: content,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewAddTemplateRequestWithoutParam() *AddTemplateRequest {

    return &AddTemplateRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/addTemplate",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param regionId: Region ID(Required) */
func (r *AddTemplateRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}

/* param appId: appId参数(Optional) */
func (r *AddTemplateRequest) SetAppId(appId string) {
    r.AppId = &appId
}

/* param signType: signType参数(Optional) */
func (r *AddTemplateRequest) SetSignType(signType string) {
    r.SignType = &signType
}

/* param purpose: purpose参数(Optional) */
func (r *AddTemplateRequest) SetPurpose(purpose string) {
    r.Purpose = &purpose
}

/* param signCardType: signCardType参数(Optional) */
func (r *AddTemplateRequest) SetSignCardType(signCardType string) {
    r.SignCardType = &signCardType
}

/* param aptitudes: aptitudes参数(Optional) */
func (r *AddTemplateRequest) SetAptitudes(aptitudes string) {
    r.Aptitudes = &aptitudes
}

/* param title: title参数(Optional) */
func (r *AddTemplateRequest) SetTitle(title string) {
    r.Title = &title
}

/* param description: description参数(Optional) */
func (r *AddTemplateRequest) SetDescription(description string) {
    r.Description = &description
}

/* param isTuiding: isTuiding参数(Optional) */
func (r *AddTemplateRequest) SetIsTuiding(isTuiding string) {
    r.IsTuiding = &isTuiding
}

/* param content: content参数(Optional) */
func (r *AddTemplateRequest) SetContent(content []rms.QueryAddTemplateContent) {
    r.Content = content
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r AddTemplateRequest) GetRegionId() string {
    return r.RegionId
}

type AddTemplateResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result AddTemplateResult `json:"result"`
}

type AddTemplateResult struct {
    Data []rms.RespAddTemplateData `json:"data"`
    Message string `json:"message"`
    Status string `json:"status"`
}