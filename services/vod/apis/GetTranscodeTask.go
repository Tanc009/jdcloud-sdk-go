// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/jdcloud-api/jdcloud-sdk-go/core"
)

type GetTranscodeTaskRequest struct {

    core.JDCloudRequest

    /* 视频转码任务D  */
    TaskId int `json:"taskId"`
}

/*
 * param taskId: 视频转码任务D (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewGetTranscodeTaskRequest(
    taskId int,
) *GetTranscodeTaskRequest {

	return &GetTranscodeTaskRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/transcodeTasks/{taskId}",
			Method:  "GET",
			Header:  nil,
			Version: "v1",
		},
        TaskId: taskId,
	}
}

/*
 * param taskId: 视频转码任务D (Required)
 */
func NewGetTranscodeTaskRequestWithAllParams(
    taskId int,
) *GetTranscodeTaskRequest {

    return &GetTranscodeTaskRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/transcodeTasks/{taskId}",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
        TaskId: taskId,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewGetTranscodeTaskRequestWithoutParam() *GetTranscodeTaskRequest {

    return &GetTranscodeTaskRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/transcodeTasks/{taskId}",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param taskId: 视频转码任务D(Required) */
func (r *GetTranscodeTaskRequest) SetTaskId(taskId int) {
    r.TaskId = taskId
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r GetTranscodeTaskRequest) GetRegionId() string {
    return ""
}

type GetTranscodeTaskResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result GetTranscodeTaskResult `json:"result"`
}

type GetTranscodeTaskResult struct {
    TaskId int64 `json:"taskId"`
    Name string `json:"name"`
    MediaType int `json:"mediaType"`
    Status int `json:"status"`
    Progress string `json:"progress"`
    Size int64 `json:"size"`
    TranscodeTemplateId int `json:"transcodeTemplateId"`
    Bitrate int64 `json:"bitrate"`
    Codec string `json:"codec"`
    Format string `json:"format"`
    Width int `json:"width"`
    Height int `json:"height"`
    Fps string `json:"fps"`
    CreateTime string `json:"createTime"`
    UpdateTime string `json:"updateTime"`
}